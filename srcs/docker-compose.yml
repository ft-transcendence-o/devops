version: '3.0'

services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: dockerfile
    volumes:
      - ./nginx/config/:/etc/nginx/conf.d/
      - static_volume:/usr/share/nginx/html/static
    ports:
      - 80:80
      - 443:443
    depends_on:
      - django
    networks:
      - tscen

  postgresql:
    container_name: postgresql
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${db_name}
      - POSTGRES_USER=${db_user}
      - POSTGRES_PASSWORD=${db_pw}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${db_user} -d ${db_name}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tscen
    env_file:
      - .env

  django:
    container_name: django
    build:
      context: ./django
      dockerfile: dockerfile
    volumes:
      - django_data:/app/
      - static_volume:/app/static
    ports:
      - 8000:8000
    command:
      - sh
      - -c
      - |
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8000 transcendence.wsgi:application
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - tscen
    env_file:
      - .env

volumes:
  django_data:
    driver: local
    name: django_data
    driver_opts:
      type: none
      o: bind
      device: ./django/app/
  postgres_data:
    driver: local
    name: postgres_data
    driver_opts:
      type: none
      o: bind
      device: ./postgres/
  static_volume:
    driver: local

networks:
  tscen:
    driver: bridge
